/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package orthodent.pacientes;

import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.Pago;
import modelo.PlanTratamiento;
import orthodent.db.PagoDB;
import orthodent.db.PlanTratamientoDB;

/**
 *
 * @author Msanhuezal
 */
public class VentanaAbono extends javax.swing.JDialog {

    /**
     * Creates new form NuevoUsuario
     */
    public static int idPlanTratamiento;
    public static Recaudacion recaudacionPadre;
    public static boolean crearNuevo;
    public static Pago pagoAbono;
    public static int totalAbono;
    public static int totalTrat;
    
    public VentanaAbono(java.awt.Frame parent, boolean modal, int idPlanTratamiento, Recaudacion rc, boolean crear, Pago pgAbono) {
        super(parent, modal);
        try {
            initComponents();
            recaudacionPadre = rc;
            crearNuevo = crear;
            pagoAbono = pgAbono;
            //this.textDescripcion.setLineWrap(true);
            this.aceptar.setCursor(new Cursor(Cursor.HAND_CURSOR));
            this.cancelar.setCursor(new Cursor(Cursor.HAND_CURSOR));
            this.idPlanTratamiento = idPlanTratamiento;
            PlanTratamiento pln = PlanTratamientoDB.getPlanTratamiento(idPlanTratamiento);
            totalAbono = pln.getTotalAbonos();
            totalTrat = pln.getCostoTotal();
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            this.setLocation((screenSize.width - this.getSize().width) / 2 ,
                    (screenSize.height - this.getSize().height) / 2);
            if(crearNuevo){
                this.setTitle("Nueva Ficha Clínica");
                this.titulo.setText("Nueva Ficha Clínica");
            }
            else{
                this.setTitle("Editar Ficha Clínica");
                this.titulo.setText("Editar Ficha Clínica");
                this.calendarioFecha.setDate(this.getFecha(pagoAbono.getFecha()));
                //this.textDescripcion.setText(pagoAbono.getAbono()+"");
                this.jTextField1.setText(pagoAbono.getAbono()+"");
            }
        } catch (Exception ex) {
            Logger.getLogger(VentanaAbono.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
        private Date getFecha(String fechaNacimiento){
        
        if(fechaNacimiento!=null){
            int año = Integer.parseInt(fechaNacimiento.substring(0, fechaNacimiento.indexOf("-")))-1900;
            fechaNacimiento = fechaNacimiento.substring(fechaNacimiento.indexOf("-")+1, fechaNacimiento.length());

            int mes = Integer.parseInt(fechaNacimiento.substring(0, fechaNacimiento.indexOf("-")))-1;
            fechaNacimiento = fechaNacimiento.substring(fechaNacimiento.indexOf("-")+1, fechaNacimiento.length());

            int dia = Integer.parseInt(fechaNacimiento);
            
            return new Date(año, mes, dia);
        }
        else{
            return null;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        labelDescripcion = new javax.swing.JLabel();
        titulo = new javax.swing.JLabel();
        calendarioFecha = new com.toedter.calendar.JDateChooser();
        labelFecha = new javax.swing.JLabel();
        cancelar = new javax.swing.JButton();
        aceptar = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nueva Ficha Clínica");

        jPanel2.setBackground(new java.awt.Color(9, 133, 179));

        jPanel3.setBackground(new java.awt.Color(9, 133, 179));

        labelDescripcion.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        labelDescripcion.setForeground(new java.awt.Color(255, 255, 255));
        labelDescripcion.setText("Cantidad");

        titulo.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        titulo.setForeground(new java.awt.Color(255, 255, 255));
        titulo.setText("Nuevo Abono");

        labelFecha.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        labelFecha.setForeground(new java.awt.Color(255, 255, 255));
        labelFecha.setText("Fecha");

        cancelar.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        aceptar.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        aceptar.setText("Aceptar");
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 113, Short.MAX_VALUE)
                        .addComponent(titulo)
                        .addGap(83, 83, 83))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelFecha)
                                    .addComponent(labelDescripcion))
                                .addGap(91, 91, 91)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(calendarioFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                    .addComponent(jTextField1))))
                        .addContainerGap(22, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titulo)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelFecha)
                    .addComponent(calendarioFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDescripcion)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aceptar)
                    .addComponent(cancelar))
                .addContainerGap(214, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    private String getFechaString(Date date){
        if(date!=null){
            String fechaNacimiento = (date.getYear()+1900) + "-";

            if((date.getMonth()+1)<9){
                fechaNacimiento = fechaNacimiento + "0";
            }

            fechaNacimiento = fechaNacimiento +(date.getMonth()+1)+"-";

            if(date.getDate()<9){
                fechaNacimiento = fechaNacimiento + "0";
            }

            fechaNacimiento = fechaNacimiento + date.getDate();

            return fechaNacimiento;
        }
        return null;
    }    
    

    
    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
        Date date = this.calendarioFecha.getDate();
        String fechaCita = getFechaString(date);
        String descripcion = this.jTextField1.getText();
        int abono=Integer.parseInt(descripcion);
        //int des = Integer.parseInt(descripcion);
        if(validarCampos()){
            if(abono > 0 || totalTrat < (abono+totalAbono)){
                if(crearNuevo){ //crear
                    boolean respuesta = PagoDB.crearPago(this.idPlanTratamiento, fechaCita, abono);            
                    this.recaudacionPadre.updateModeloPagoAbono();
                    this.recaudacionPadre.updateUI();
                    //this.dispose();
                }
                else{ //editar
                    if(verificarCambios()){
                        pagoAbono.setFecha(fechaCita);
                        pagoAbono.setAbono(abono);
                        boolean respuesta = PagoDB.editarPago(pagoAbono);   
                        this.recaudacionPadre.updateModeloPagoAbono();
                        this.recaudacionPadre.updateUI();                    
                    }

                }
                this.dispose();
            }
            else{
                //el Abono no es valido
                System.out.println("Ingresar un abono valido");

            }
            
        }
        else{
                        JOptionPane.showMessageDialog(this,
                    "Faltan campos por completar",
                    "Orthodent",
                    JOptionPane.INFORMATION_MESSAGE);
        }
       
    }//GEN-LAST:event_aceptarActionPerformed

    public boolean verificarCambios(){
        Date date = this.calendarioFecha.getDate();
        String fechaCita = getFechaString(date);
        String descripcion = this.jTextField1.getText();
        if(fechaCita.equals(pagoAbono.getFecha()) && descripcion.equals(pagoAbono.getAbono())){
            return false;
        }
        return true;
    }
    
    public boolean validarCampos(){
        String fechaCita = this.calendarioFecha.getDateFormatString();
        String descripcion = this.jTextField1.getText();        
        if(!fechaCita.equals("") && !descripcion.equals("")){
            return true;
        }
        return false;
    }
    
        
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptar;
    private com.toedter.calendar.JDateChooser calendarioFecha;
    private javax.swing.JButton cancelar;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel labelDescripcion;
    private javax.swing.JLabel labelFecha;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
