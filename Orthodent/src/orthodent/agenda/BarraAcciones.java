/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package orthodent.agenda;

import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import modelo.Usuario;
import orthodent.Item;
import orthodent.db.Autenticacion;

/**
 *
 * @author Lucy
 */
public class BarraAcciones extends javax.swing.JPanel {

    /**
     * Creates new form BarraAcciones
     */
    private Usuario usuarioActual;
    private Agenda contenedor;
    public BarraAcciones(Usuario usuario, Agenda cont) {
        this.usuarioActual = usuario;
        this.contenedor = cont;
        initComponents();
        initProfesionales();
        //this.fechaAgenda.setDate(new Date());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        profesionales = new javax.swing.JComboBox();
        fechaAgenda = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        hoy = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel1.setText("Profesional");

        profesionales.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        profesionales.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        profesionales.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                profesionalesItemStateChanged(evt);
            }
        });
        profesionales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profesionalesActionPerformed(evt);
            }
        });

        fechaAgenda.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        fechaAgenda.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fechaAgendaPropertyChange(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel2.setText("Fecha");

        hoy.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        hoy.setText("Actual");
        hoy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hoyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addComponent(profesionales, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 45, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(50, 50, 50)
                .addComponent(fechaAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hoy)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(hoy)
                    .addComponent(fechaAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profesionales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fechaAgendaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fechaAgendaPropertyChange
        // TODO add your handling code here:
        if(this.fechaAgenda.getDate()!=null){
            //System.out.println("ACA TENGO QUE CAMBIAR "+this.contenedor.obtenerSemana(this.fechaAgenda.getDate()));
            this.contenedor.cambiarSemanaDeAgenda(this.fechaAgenda.getDate());
        }
    }//GEN-LAST:event_fechaAgendaPropertyChange

    private void hoyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hoyActionPerformed
        // TODO add your handling code here:
        Date hoy = new Date();
        this.fechaAgenda.setDate(this.contenedor.obtenerLunes(hoy));
        
    }//GEN-LAST:event_hoyActionPerformed

    private void profesionalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profesionalesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profesionalesActionPerformed

    private void profesionalesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_profesionalesItemStateChanged
        // TODO add your handling code here:
        if(this.fechaAgenda.getDate()!=null)
            this.contenedor.cambiarProfesional(this.fechaAgenda.getDate());
    }//GEN-LAST:event_profesionalesItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser fechaAgenda;
    private javax.swing.JButton hoy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JComboBox profesionales;
    // End of variables declaration//GEN-END:variables

    private void initProfesionales() {
        ArrayList<Usuario> usuarios = null;
        if(this.usuarioActual.getId_rol()==4)
            usuarios = Autenticacion.listarProfesionales(this.usuarioActual.getId_clinica());
        else if(this.usuarioActual.getId_rol()==3)
            usuarios = Autenticacion.listarProfesional(this.usuarioActual.getId_usuario());
        else
            usuarios = Autenticacion.listarProfesionales();
            
        if(usuarios!=null && usuarios.size()>0){
            
            if(this.usuarioActual.getId_rol()==3){
                Vector model = new Vector();
                Item item = null;
                String name = this.usuarioActual.getNombre();

                if(name.contains(" ")){
                    name = name.substring(0,name.indexOf(" "));
                }
                name = name + " " + this.usuarioActual.getApellido_pat();
                item = new Item(name,usuarioActual.getId_usuario());
                model.addElement(item);
                profesionales.setModel(new DefaultComboBoxModel(model));
                profesionales.setSelectedItem(item);
                profesionales.setEnabled(false);
            }
            else{
                Vector model = new Vector();
                //tem item = null;
                for(Usuario user : usuarios){
                    String name = user.getNombre();

                    if(name.contains(" ")){
                        name = name.substring(0,name.indexOf(" "));
                    }
                    name = name + " " + user.getApellido_pat();
                    model.addElement(new Item(name,user.getId_usuario()));
                }
                profesionales.setModel(new DefaultComboBoxModel(model));
                profesionales.setSelectedIndex(0);
                //profesionales.setSelectedItem(item);
            }
        }

        
        
    }

    public int getIdProfesional(){
        return ((Item)profesionales.getSelectedItem()).getId();
    }
    
    public void setFechaAgenda(Date fecha){
        this.fechaAgenda.setDate(fecha);
    }

}
